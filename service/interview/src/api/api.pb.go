// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.3
// source: api.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateInterviewTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company     string   `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	Role        string   `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Skills      []string `protobuf:"bytes,3,rep,name=skills,proto3" json:"skills,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Questions   []string `protobuf:"bytes,5,rep,name=questions,proto3" json:"questions,omitempty"`
	UserId      int32    `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CreateInterviewTemplate) Reset() {
	*x = CreateInterviewTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInterviewTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInterviewTemplate) ProtoMessage() {}

func (x *CreateInterviewTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInterviewTemplate.ProtoReflect.Descriptor instead.
func (*CreateInterviewTemplate) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *CreateInterviewTemplate) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *CreateInterviewTemplate) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *CreateInterviewTemplate) GetSkills() []string {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *CreateInterviewTemplate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateInterviewTemplate) GetQuestions() []string {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *CreateInterviewTemplate) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type InterviewTemplates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterviewTemplates []*InterviewTemplate `protobuf:"bytes,1,rep,name=interview_templates,json=interviewTemplates,proto3" json:"interview_templates,omitempty"`
}

func (x *InterviewTemplates) Reset() {
	*x = InterviewTemplates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterviewTemplates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterviewTemplates) ProtoMessage() {}

func (x *InterviewTemplates) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterviewTemplates.ProtoReflect.Descriptor instead.
func (*InterviewTemplates) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *InterviewTemplates) GetInterviewTemplates() []*InterviewTemplate {
	if x != nil {
		return x.InterviewTemplates
	}
	return nil
}

type InterviewTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterviewTemplateId []byte   `protobuf:"bytes,1,opt,name=interview_template_id,json=interviewTemplateId,proto3" json:"interview_template_id,omitempty"`
	AverageScore        int32    `protobuf:"varint,2,opt,name=average_score,json=averageScore,proto3" json:"average_score,omitempty"`
	AverageRating       int32    `protobuf:"varint,3,opt,name=average_rating,json=averageRating,proto3" json:"average_rating,omitempty"`
	AmountConducted     int32    `protobuf:"varint,4,opt,name=amount_conducted,json=amountConducted,proto3" json:"amount_conducted,omitempty"`
	Company             string   `protobuf:"bytes,5,opt,name=company,proto3" json:"company,omitempty"`
	Role                string   `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"`
	Skills              []string `protobuf:"bytes,7,rep,name=skills,proto3" json:"skills,omitempty"`
	Description         string   `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	Questions           []string `protobuf:"bytes,9,rep,name=questions,proto3" json:"questions,omitempty"`
	UserId              int32    `protobuf:"varint,10,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *InterviewTemplate) Reset() {
	*x = InterviewTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterviewTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterviewTemplate) ProtoMessage() {}

func (x *InterviewTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterviewTemplate.ProtoReflect.Descriptor instead.
func (*InterviewTemplate) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *InterviewTemplate) GetInterviewTemplateId() []byte {
	if x != nil {
		return x.InterviewTemplateId
	}
	return nil
}

func (x *InterviewTemplate) GetAverageScore() int32 {
	if x != nil {
		return x.AverageScore
	}
	return 0
}

func (x *InterviewTemplate) GetAverageRating() int32 {
	if x != nil {
		return x.AverageRating
	}
	return 0
}

func (x *InterviewTemplate) GetAmountConducted() int32 {
	if x != nil {
		return x.AmountConducted
	}
	return 0
}

func (x *InterviewTemplate) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *InterviewTemplate) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *InterviewTemplate) GetSkills() []string {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *InterviewTemplate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InterviewTemplate) GetQuestions() []string {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *InterviewTemplate) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ResponseType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in api.proto.
	Responses []string `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	Feedback  []string `protobuf:"bytes,2,rep,name=feedback,proto3" json:"feedback,omitempty"`
	Questions []string `protobuf:"bytes,3,rep,name=questions,proto3" json:"questions,omitempty"`
	Answers   []string `protobuf:"bytes,4,rep,name=answers,proto3" json:"answers,omitempty"`
}

func (x *ResponseType) Reset() {
	*x = ResponseType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseType) ProtoMessage() {}

func (x *ResponseType) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseType.ProtoReflect.Descriptor instead.
func (*ResponseType) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

// Deprecated: Marked as deprecated in api.proto.
func (x *ResponseType) GetResponses() []string {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *ResponseType) GetFeedback() []string {
	if x != nil {
		return x.Feedback
	}
	return nil
}

func (x *ResponseType) GetQuestions() []string {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *ResponseType) GetAnswers() []string {
	if x != nil {
		return x.Answers
	}
	return nil
}

type CreateConductedInterview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterviewTemplateId []byte        `protobuf:"bytes,1,opt,name=interview_template_id,json=interviewTemplateId,proto3" json:"interview_template_id,omitempty"`
	UserId              int32         `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Score               int32         `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	Rating              int32         `protobuf:"varint,4,opt,name=rating,proto3" json:"rating,omitempty"`
	Role                string        `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	Responses           *ResponseType `protobuf:"bytes,6,opt,name=responses,proto3" json:"responses,omitempty"`
	Company             string        `protobuf:"bytes,7,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *CreateConductedInterview) Reset() {
	*x = CreateConductedInterview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConductedInterview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConductedInterview) ProtoMessage() {}

func (x *CreateConductedInterview) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConductedInterview.ProtoReflect.Descriptor instead.
func (*CreateConductedInterview) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *CreateConductedInterview) GetInterviewTemplateId() []byte {
	if x != nil {
		return x.InterviewTemplateId
	}
	return nil
}

func (x *CreateConductedInterview) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateConductedInterview) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *CreateConductedInterview) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *CreateConductedInterview) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *CreateConductedInterview) GetResponses() *ResponseType {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *CreateConductedInterview) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

type ConductedInterview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConductedInterviewId []byte        `protobuf:"bytes,1,opt,name=conducted_interview_id,json=conductedInterviewId,proto3" json:"conducted_interview_id,omitempty"`
	InterviewTemplateId  []byte        `protobuf:"bytes,2,opt,name=interview_template_id,json=interviewTemplateId,proto3" json:"interview_template_id,omitempty"`
	UserId               int32         `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Score                int32         `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
	Rating               int32         `protobuf:"varint,5,opt,name=rating,proto3" json:"rating,omitempty"`
	Role                 string        `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"`
	Responses            *ResponseType `protobuf:"bytes,7,opt,name=responses,proto3" json:"responses,omitempty"`
	Company              string        `protobuf:"bytes,8,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *ConductedInterview) Reset() {
	*x = ConductedInterview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConductedInterview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConductedInterview) ProtoMessage() {}

func (x *ConductedInterview) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConductedInterview.ProtoReflect.Descriptor instead.
func (*ConductedInterview) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *ConductedInterview) GetConductedInterviewId() []byte {
	if x != nil {
		return x.ConductedInterviewId
	}
	return nil
}

func (x *ConductedInterview) GetInterviewTemplateId() []byte {
	if x != nil {
		return x.InterviewTemplateId
	}
	return nil
}

func (x *ConductedInterview) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ConductedInterview) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ConductedInterview) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *ConductedInterview) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ConductedInterview) GetResponses() *ResponseType {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *ConductedInterview) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

type ConductedInterviews struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConductedInterviews []*ConductedInterview `protobuf:"bytes,1,rep,name=conducted_interviews,json=conductedInterviews,proto3" json:"conducted_interviews,omitempty"`
}

func (x *ConductedInterviews) Reset() {
	*x = ConductedInterviews{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConductedInterviews) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConductedInterviews) ProtoMessage() {}

func (x *ConductedInterviews) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConductedInterviews.ProtoReflect.Descriptor instead.
func (*ConductedInterviews) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *ConductedInterviews) GetConductedInterviews() []*ConductedInterview {
	if x != nil {
		return x.ConductedInterviews
	}
	return nil
}

type GetConductedInterviewsByUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetConductedInterviewsByUser) Reset() {
	*x = GetConductedInterviewsByUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConductedInterviewsByUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConductedInterviewsByUser) ProtoMessage() {}

func (x *GetConductedInterviewsByUser) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConductedInterviewsByUser.ProtoReflect.Descriptor instead.
func (*GetConductedInterviewsByUser) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetConductedInterviewsByUser) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetInterviewTemplatesByUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetInterviewTemplatesByUser) Reset() {
	*x = GetInterviewTemplatesByUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInterviewTemplatesByUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInterviewTemplatesByUser) ProtoMessage() {}

func (x *GetInterviewTemplatesByUser) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInterviewTemplatesByUser.ProtoReflect.Descriptor instead.
func (*GetInterviewTemplatesByUser) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *GetInterviewTemplatesByUser) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ConductInterviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer         *string                                 `protobuf:"bytes,1,opt,name=answer,proto3,oneof" json:"answer,omitempty"`
	InitialRequest *ConductInterviewRequest_InitialRequest `protobuf:"bytes,2,opt,name=initial_request,json=initialRequest,proto3,oneof" json:"initial_request,omitempty"`
	FinalRequest   *ConductInterviewRequest_FinalRequest   `protobuf:"bytes,3,opt,name=final_request,json=finalRequest,proto3,oneof" json:"final_request,omitempty"`
}

func (x *ConductInterviewRequest) Reset() {
	*x = ConductInterviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConductInterviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConductInterviewRequest) ProtoMessage() {}

func (x *ConductInterviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConductInterviewRequest.ProtoReflect.Descriptor instead.
func (*ConductInterviewRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *ConductInterviewRequest) GetAnswer() string {
	if x != nil && x.Answer != nil {
		return *x.Answer
	}
	return ""
}

func (x *ConductInterviewRequest) GetInitialRequest() *ConductInterviewRequest_InitialRequest {
	if x != nil {
		return x.InitialRequest
	}
	return nil
}

func (x *ConductInterviewRequest) GetFinalRequest() *ConductInterviewRequest_FinalRequest {
	if x != nil {
		return x.FinalRequest
	}
	return nil
}

type ConductInterviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question                 string                    `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	CreateConductedInterview *CreateConductedInterview `protobuf:"bytes,2,opt,name=create_conducted_interview,json=createConductedInterview,proto3,oneof" json:"create_conducted_interview,omitempty"`
}

func (x *ConductInterviewResponse) Reset() {
	*x = ConductInterviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConductInterviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConductInterviewResponse) ProtoMessage() {}

func (x *ConductInterviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConductInterviewResponse.ProtoReflect.Descriptor instead.
func (*ConductInterviewResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *ConductInterviewResponse) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *ConductInterviewResponse) GetCreateConductedInterview() *CreateConductedInterview {
	if x != nil {
		return x.CreateConductedInterview
	}
	return nil
}

type ConductInterviewRequest_InitialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterviewTemplateId    []byte `protobuf:"bytes,1,opt,name=interview_template_id,json=interviewTemplateId,proto3" json:"interview_template_id,omitempty"`
	NumQuestionsToGenerate *int32 `protobuf:"varint,2,opt,name=num_questions_to_generate,json=numQuestionsToGenerate,proto3,oneof" json:"num_questions_to_generate,omitempty"`
	UserId                 int32  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ConductInterviewRequest_InitialRequest) Reset() {
	*x = ConductInterviewRequest_InitialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConductInterviewRequest_InitialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConductInterviewRequest_InitialRequest) ProtoMessage() {}

func (x *ConductInterviewRequest_InitialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConductInterviewRequest_InitialRequest.ProtoReflect.Descriptor instead.
func (*ConductInterviewRequest_InitialRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ConductInterviewRequest_InitialRequest) GetInterviewTemplateId() []byte {
	if x != nil {
		return x.InterviewTemplateId
	}
	return nil
}

func (x *ConductInterviewRequest_InitialRequest) GetNumQuestionsToGenerate() int32 {
	if x != nil && x.NumQuestionsToGenerate != nil {
		return *x.NumQuestionsToGenerate
	}
	return 0
}

func (x *ConductInterviewRequest_InitialRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ConductInterviewRequest_FinalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating int32 `protobuf:"varint,1,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *ConductInterviewRequest_FinalRequest) Reset() {
	*x = ConductInterviewRequest_FinalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConductInterviewRequest_FinalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConductInterviewRequest_FinalRequest) ProtoMessage() {}

func (x *ConductInterviewRequest_FinalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConductInterviewRequest_FinalRequest.ProtoReflect.Descriptor instead.
func (*ConductInterviewRequest_FinalRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9, 1}
}

func (x *ConductInterviewRequest_FinalRequest) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69,
	0x22, 0xb8, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x12, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x47, 0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x22, 0xdd, 0x02, 0x0a, 0x11, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x29, 0x0a, 0x10, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x75,
	0x63, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x0c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x73, 0x22, 0xf4, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64,
	0x75, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x32,
	0x0a, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x2f, 0x0a,
	0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0xa4, 0x02, 0x0a, 0x12, 0x43, 0x6f, 0x6e,
	0x64, 0x75, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12,
	0x34, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x14, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69,
	0x65, 0x77, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22,
	0x61, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x4a, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x75,
	0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x13, 0x63,
	0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x22, 0x37, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74,
	0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xfd, 0x03, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x59, 0x0a, 0x0f,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x01, 0x52, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x53, 0x0a, 0x0d, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x02, 0x52, 0x0c, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x1a, 0xbb, 0x01, 0x0a,
	0x0e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x32, 0x0a, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x19, 0x6e, 0x75, 0x6d, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x16, 0x6e, 0x75, 0x6d, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x6f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x1c, 0x0a, 0x1a,
	0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x74,
	0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x1a, 0x26, 0x0a, 0x0c, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xb7, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x1a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x64, 0x75, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x48,
	0x00, 0x52, 0x18, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74,
	0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x42, 0x1d,
	0x0a, 0x1b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x32, 0xe1, 0x03,
	0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x55, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a,
	0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x1c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63,
	0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30,
	0x01, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_proto_goTypes = []any{
	(*CreateInterviewTemplate)(nil),                // 0: api.CreateInterviewTemplate
	(*InterviewTemplates)(nil),                     // 1: api.InterviewTemplates
	(*InterviewTemplate)(nil),                      // 2: api.InterviewTemplate
	(*ResponseType)(nil),                           // 3: api.ResponseType
	(*CreateConductedInterview)(nil),               // 4: api.CreateConductedInterview
	(*ConductedInterview)(nil),                     // 5: api.ConductedInterview
	(*ConductedInterviews)(nil),                    // 6: api.ConductedInterviews
	(*GetConductedInterviewsByUser)(nil),           // 7: api.GetConductedInterviewsByUser
	(*GetInterviewTemplatesByUser)(nil),            // 8: api.GetInterviewTemplatesByUser
	(*ConductInterviewRequest)(nil),                // 9: api.ConductInterviewRequest
	(*ConductInterviewResponse)(nil),               // 10: api.ConductInterviewResponse
	(*ConductInterviewRequest_InitialRequest)(nil), // 11: api.ConductInterviewRequest.InitialRequest
	(*ConductInterviewRequest_FinalRequest)(nil),   // 12: api.ConductInterviewRequest.FinalRequest
}
var file_api_proto_depIdxs = []int32{
	2,  // 0: api.InterviewTemplates.interview_templates:type_name -> api.InterviewTemplate
	3,  // 1: api.CreateConductedInterview.responses:type_name -> api.ResponseType
	3,  // 2: api.ConductedInterview.responses:type_name -> api.ResponseType
	5,  // 3: api.ConductedInterviews.conducted_interviews:type_name -> api.ConductedInterview
	11, // 4: api.ConductInterviewRequest.initial_request:type_name -> api.ConductInterviewRequest.InitialRequest
	12, // 5: api.ConductInterviewRequest.final_request:type_name -> api.ConductInterviewRequest.FinalRequest
	4,  // 6: api.ConductInterviewResponse.create_conducted_interview:type_name -> api.CreateConductedInterview
	0,  // 7: api.InterviewService.CreateInterviewTemplateCall:input_type -> api.CreateInterviewTemplate
	4,  // 8: api.InterviewService.CreateConductedInterviewCall:input_type -> api.CreateConductedInterview
	7,  // 9: api.InterviewService.GetConductedInterviewsByUserCall:input_type -> api.GetConductedInterviewsByUser
	8,  // 10: api.InterviewService.GetInterviewTemplatesByUserCall:input_type -> api.GetInterviewTemplatesByUser
	9,  // 11: api.InterviewService.ConductInterviewCall:input_type -> api.ConductInterviewRequest
	2,  // 12: api.InterviewService.CreateInterviewTemplateCall:output_type -> api.InterviewTemplate
	5,  // 13: api.InterviewService.CreateConductedInterviewCall:output_type -> api.ConductedInterview
	6,  // 14: api.InterviewService.GetConductedInterviewsByUserCall:output_type -> api.ConductedInterviews
	1,  // 15: api.InterviewService.GetInterviewTemplatesByUserCall:output_type -> api.InterviewTemplates
	10, // 16: api.InterviewService.ConductInterviewCall:output_type -> api.ConductInterviewResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateInterviewTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*InterviewTemplates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*InterviewTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ResponseType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CreateConductedInterview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ConductedInterview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ConductedInterviews); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetConductedInterviewsByUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetInterviewTemplatesByUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ConductInterviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ConductInterviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ConductInterviewRequest_InitialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ConductInterviewRequest_FinalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_msgTypes[9].OneofWrappers = []any{}
	file_api_proto_msgTypes[10].OneofWrappers = []any{}
	file_api_proto_msgTypes[11].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
