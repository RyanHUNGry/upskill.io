syntax = "proto3";
package api;

import "enums.proto";

option go_package = "ryhung.upskill.io/internal/api";

// Message for creating an answer in an interview session
message CreateAnswerRequest {
    string answer = 1;
    bytes session_id = 2;
    bytes interview_id = 3;
    bytes user_id = 4;
    int32 question_idx = 5;
    string company_name = 6;
    string question = 7;
}



// Message for retrieving answer scores
message GetAnswerScores {
    bytes user_id = 1;
    bytes interview_id = 2;
    bytes session_id = 3;

    // Inner message representing the score of a single answer
    message AnswerScore {
        double average_score = 1;
        string answer = 2;
        int32 answer_idx = 3;
        int32 question_idx = 4;
        string question = 6;

        message ScoreBreakdown {
            Criteria criteria = 1;
            double score = 2;
            string feedback = 3;
        }

        repeated ScoreBreakdown score_breakdowns = 7;
    }

    repeated AnswerScore answer_scores = 4;
}

// Request to create an interview with a company and questions
message CreateInterviewRequest {
    bytes user_id = 1;
    string company_name = 2;

    // Inner message representing a single question in an interview
    message Question {
        string question = 1;
        int32 question_idx = 2;
    }

    repeated Question questions = 3;
}

// Response message for retrieving interview details
message GetInterview {
    bytes interview_id = 1;
    string company_name = 2;
    repeated CreateInterviewRequest.Question questions = 3;
}

message Health {}

// Service definition containing the RPC methods
service InterviewService {
    // RPC to create an interview with a list of questions and the company name
    rpc CreateInterview(CreateInterviewRequest) returns (GetInterview) {};

    // RPC to send a stream of answers and retrieve aggregated scores
    rpc CreateAnswer(stream CreateAnswerRequest) returns (GetAnswerScores) {};

    rpc ServiceHealthProbe(Health) returns (Health) {};
}
